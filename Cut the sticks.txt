import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {
    static int smallestNotZero(int a[])
    {
        int i=0,min=a[0];
        while(a[i]<=0)
        {
            ++i;
            min=a[i];
        }
        for(i=0;i<a.length;i++)
        if(a[i]<min && a[i]>0)
        min=a[i];
        return min;
    }
    static int[] reduceArray(int a[],int ele)
    {
        for(int i=0;i<a.length;i++)
        a[i]=a[i]-ele;
        return a;
    }
    static int countNonZero(int a[])
    {
        int c=0,i=0;
        for(i=0;i<a.length;i++)
        {
            if(a[i]>0)
            c++;
        }
        return c;
    }
    // Complete the cutTheSticks function below.
    static int[] cutTheSticks(int[] arr) 
    {
        int i=0,ctr=countNonZero(arr);
        
        List<Integer> s=new ArrayList<Integer>();
        while(ctr>0)
        {   
            s.add(ctr);
            int cut=smallestNotZero(arr);
            arr=reduceArray(arr,cut);
            ctr=countNonZero(arr);
        }
        int sticks[]=new int[s.size()];
        for(i=0;i<s.size();i++)
        sticks[i]=s.get(i);
        return sticks;
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int[] arr = new int[n];

        String[] arrItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < n; i++) {
            int arrItem = Integer.parseInt(arrItems[i]);
            arr[i] = arrItem;
        }

        int[] result = cutTheSticks(arr);

        for (int i = 0; i < result.length; i++) {
            bufferedWriter.write(String.valueOf(result[i]));

            if (i != result.length - 1) {
                bufferedWriter.write("\n");
            }
        }

        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
